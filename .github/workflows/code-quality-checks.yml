name: Code Quality Checks
on:
    push:
        branches:
            - feature/**
            - main
jobs:
    prettier-code-formatting:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3

            - name: Cache node modules
              id: cache-nodemodules
              uses: actions/cache@v2
              env:
                  cache-name: cache-node-modules
              with:
                  # caching node_modules
                  path: node_modules
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-

            - name: Install Dependencies
              if: steps.cache-nodemodules.outputs.cache-hit != 'true'
              run: |
                  npm ci

            - name: Run pettier:check to enforce code formatting
              run: |
                  npm run prettier:check
    eslint:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3

            - name: Cache node modules
              id: cache-nodemodules
              uses: actions/cache@v2
              env:
                  cache-name: cache-node-modules
              with:
                  # caching node_modules
                  path: node_modules
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-

            - name: Install Dependencies
              if: steps.cache-nodemodules.outputs.cache-hit != 'true'
              run: |
                  npm ci

            - name: Run eslint
              run: |
                  npm run lint

    pmd-code-analysis:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: "Static Code Quality and Best Practices Checks provided by PMD"
              run: |
                  PMD_VERSION=`cat pmd/pmd-version.txt`
                  wget https://github.com/pmd/pmd/releases/download/pmd_releases%2F$PMD_VERSION/pmd-bin-$PMD_VERSION.zip
                  unzip pmd-bin-$PMD_VERSION.zip -d ~
                  mv ~/pmd-bin-$PMD_VERSION ~/pmd
                  ~/pmd/bin/run.sh pmd --version

            - name: "Run Checks and fail Build"
              run: |
                  ~/pmd/bin/run.sh pmd -d ./force-app/main/default/classes -R ./pmd/ruleset.xml -f text
